name: Create GitHub Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-exe:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies (including PyInstaller)
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        # Installiere pyfakefs via wheel, falls n√∂tig
        # pip install wheels/pytest_pyfakefs-XYZ.whl

    - name: Build Executable with PyInstaller
      run: |
        pyinstaller FacialGestureControl.spec # <<< ANPASSEN

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build-${{ github.ref_name }}
        path: dist/

  create-release:
    runs-on: ubuntu-latest
    needs: build-exe
    permissions:
      contents: write

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-build-${{ github.ref_name }}
        path: dist

    - name: Create GitHub Release Entry
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (EXE)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/FacialGestureControl.exe
        asset_name: FacialGestureControl-windows-${{ github.ref_name }}.exe
        asset_content_type: application/vnd.microsoft.portable-executable